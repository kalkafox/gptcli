name: Docker Image CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  PKG_CONFIG_ALLOW_CROSS: 1
  OPENSSL_STATIC: 1
  OPENSSL_DIR: /musl
  OPENSSL_INCLUDE_DIR: /musl/include/openssl
  OPENSSL_LIB_DIR: /musl/lib

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.5.0
      - uses: swatinem/rust-cache@v2.2.1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
      - name: Log in to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}

      - name: Cache OpenSSL
        uses: actions/cache@v3
        with:
          # Cache the openssl-3.1.0 within the build directory
          path: /musl
          key: ${{ runner.os }}-openssl-3.1.0

      - name: Build OpenSSL
        run: |
          if [ ! -d "/musl" ]; then
            sudo apt update && sudo apt install -y musl-dev musl-tools pkg-config linux-headers-$(uname -r)

            sudo ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/x86_64-linux-musl/asm && ln -s /usr/include/asm-generic /usr/include/x86_64-linux-musl/asm-generic && ln -s /usr/include/linux /usr/include/x86_64-linux-musl/linux

            wget https://github.com/openssl/openssl/releases/download/openssl-3.1.0/openssl-3.1.0.tar.gz
            tar -xzf openssl-3.1.0.tar.gz
            cd openssl-3.1.0
            CC="musl-gcc -fPIE -pie -static -idirafter /usr/include/ -idirafter /usr/include/x86_64-linux-gnu/" ./Configure linux-x86_64 --prefix=/usr --openssldir=/usr/lib/ssl --libdir=lib/x86_64-linux-musl
            make depend
            make -j$(nproc)
            sudo make install
          fi
      - name: Build
        run: |
          sudo apt update && sudo apt install -y musl-dev musl-tools pkg-config
          rustup target add x86_64-unknown-linux-musl
          cargo build --release --target x86_64-unknown-linux-musl
      - name: Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
